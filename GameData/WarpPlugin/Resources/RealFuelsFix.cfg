//Interstellar-RealFuels configs
@WARP_PLUGIN_SETTINGS[*]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @HydrogenResourceName = LqdHydrogen //LiquidFuel
    @HydrogenPeroxideResourceName = HTP //H2Peroxide
    @AmmoniaResourceName = LqdAmmonia //Ammonia
    @OxygenResourceName = LqdOxygen //Oxidizer
}

//Add water tank using KSPI water. (TO-DO: integration with TACLS water without trampling KSPI or TACLS)
@TANK_DEFINITION[*]:FINAL:HAS[@TANK[Kerosene],!TANK[Water]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    +TANK[Kerosene]
    {
        @name = Water
    }
}

//Add Argon to all tanks that have XenonGas, as they function and store similarly.
@TANK_DEFINITION[*]:FINAL:HAS[@TANK[XenonGas],!TANK[Argon]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    +TANK[XenonGas]
    {
        @name = ArgonGas
    }
}

//Add CO2 tank using KSPI gaseous CO2 to all tanks that have Nitrogen.
@TANK_DEFINITION[*]:FINAL:HAS[@TANK[Nitrogen],!TANK[CarbonDioxide]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    +TANK[Nitrogen]
    {
        @name = CarbonDioxide
    }
}

//Add LiquidCO2 to all tanks that have LqdMethane, as they store similarly.
@TANK_DEFINITION[*]:FINAL:HAS[@TANK[LqdMethane],!TANK[LiquidCO2]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    +TANK[LqdMethane]
    {
        @name = LiquidCO2
    }
}

//Add LiquidNitrogen to all tanks that have LqdOxygen, as they store similarly.
@TANK_DEFINITION[*]:FINAL:HAS[@TANK[LqdOxygen],!TANK[LiquidNitrogen]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    +TANK[LqdOxygen]
    {
        @name = LiquidNitrogen
    }
}

//Part catch-all updates
@PART[*]:HAS[@RESOURCE[Ammonia]]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @RESOURCE[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@PART[*]:HAS[@RESOURCE[H2Peroxide]]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @RESOURCE[H2Peroxide]
    {
        @name = HTP
    }
}

//Resource Definition updates
@OCEANIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[Ammonia]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = LqdAmmonia
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[Ammonia]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = LqdAmmonia
}
@OCEANIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[H2Peroxide]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = HTP
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:FINAL:HAS[#resourceName[H2Peroxide]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @resourceName = HTP
}

@ATMOSPHERIC_RESOURCE_PACK_DEFINITION[InterstellarAtmosphericPack]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @ATMOSPHERIC_RESOURCE_DEFINITION[KerbinOxygen]
    {
        resourceName = LqdOxygen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[KerbinHydrogen]
    {
        resourceName = LqdHydrogen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[JoolHydrogen]
    {
        resourceName = LqdHydrogen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[LaytheOxygen] 
    {
        resourceName = LqdOxygen
    }
    @ATMOSPHERIC_RESOURCE_DEFINITION[DunaOxygen] 
    {
        resourceName = LqdOxygen
    }
}

//NTR Propellant updates
@BASIC_NTR_PROPELLANT[Ammonia]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Ammonia
    @PROPELLANT[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@BASIC_NTR_PROPELLANT[Hydrolox]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Hydrolox
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
        @ratio = 0.80
    }
    @PROPELLANT[Oxidizer]
    {
        @name = LqdOxygen
        @ratio = 0.20
        @DrawGauge = False
    }
}
@BASIC_NTR_PROPELLANT[Methalox]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @PROPELLANT[Oxidizier]
    {
        @name = LqdOxygen
        @ratio = 0.557
    }
    @PROPELLANT[LqdMethane]
    {
        @ratio = 0.443
    }
}
@BASIC_NTR_PROPELLANT[Hydrogen]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = LqdHydrogen
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
    }
}

//Electric Propellants update
@ELECTRIC_PROPELLANT[Ammonia]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @PROPELLANT[Ammonia]
    {
        @name = LqdAmmonia
    }
}
@ELECTRIC_PROPELLANT[Hydrogen]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = LqdHydrogen
    @PROPELLANT[LiquidFuel]
    {
        @name = LqdHydrogen
    }
}
@ELECTRIC_PROPELLANT[MonoPropellant]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @guiName = Hydrazine
    @PROPELLANT[MonoPropellant]
    {
        @name = Hydrazine
    }
}

//Remove duplicate entry for LqdMethane
!RESOURCE_DEFINITION[LqdMethane]:FINAL:HAS[#density[0.00186456]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @density = 0.00042262
}

//Specific part fixes
@PART[FNMethaneTank*]:FINAL:HAS[@RESOURCE[LqdMethane],@RESOURCE[Oxidizer],!MODULE[ModuleFuelTanks]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    MODULE
    {
        name = ModuleFuelTanks
        temp = 0
        volume = 0
        type = Cryogenic
        @temp = #$../RESOURCE[LqdMethane]/maxAmount$
        @temp *= 4.412
        @volume = #$temp$
        @temp = #$../RESOURCE[Oxidizer]/maxAmount$
        @temp *= 5
        @volume += #$temp$
        !temp = 0
    }
    !RESOURCE[LqdMethane] {}
    !RESOURCE[Oxidizer] {}
}

@PART[*]:FINAL:HAS[@MODULE[FNModuleResourceExtraction]]:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[FNModuleResourceExtraction]:HAS[#resourceName[Ammonia]]
    {
        @resourceName = LqdAmmonia
    }
}

//NOTE: the ratio might be kinda screwy; this should really go in an engines config.
@PART[AluminiumHybrid1]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[ModuleEngines]
    {
        @PROPELLANT[Oxidizer]
        {
            @name = LqdOxygen
            @ratio *= 5
        }
    }
    @RESOURCE[Oxidizer]
    {
        @name = LqdOxygen
        @amount *= 5
        @maxAmount *= 5
    }
}
@PART[vista]:FINAL:NEEDS[RealFuels]:FOR[WarpPlugin]
{
    @MODULE[ModuleEngines]
    {
        @PROPELLANT[LiquidFuel]
        {
            @name = LqdHydrogen
            @ratio *= 14.114
        }
    }
}
